/* tslint:disable */
/* eslint-disable */
/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.6.9
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ScoreSlimChunks } from './ScoreSlimChunks';
import {
    ScoreSlimChunksFromJSON,
    ScoreSlimChunksFromJSONTyped,
    ScoreSlimChunksToJSON,
} from './ScoreSlimChunks';

/**
 * 
 * @export
 * @interface SearchSlimChunkQueryResponseBody
 */
export interface SearchSlimChunkQueryResponseBody {
    /**
     * 
     * @type {Array<ScoreSlimChunks>}
     * @memberof SearchSlimChunkQueryResponseBody
     */
    scoreChunks: Array<ScoreSlimChunks>;
    /**
     * 
     * @type {number}
     * @memberof SearchSlimChunkQueryResponseBody
     */
    totalChunkPages: number;
}

/**
 * Check if a given object implements the SearchSlimChunkQueryResponseBody interface.
 */
export function instanceOfSearchSlimChunkQueryResponseBody(value: object): boolean {
    if (!('scoreChunks' in value)) return false;
    if (!('totalChunkPages' in value)) return false;
    return true;
}

export function SearchSlimChunkQueryResponseBodyFromJSON(json: any): SearchSlimChunkQueryResponseBody {
    return SearchSlimChunkQueryResponseBodyFromJSONTyped(json, false);
}

export function SearchSlimChunkQueryResponseBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchSlimChunkQueryResponseBody {
    if (json == null) {
        return json;
    }
    return {
        
        'scoreChunks': ((json['score_chunks'] as Array<any>).map(ScoreSlimChunksFromJSON)),
        'totalChunkPages': json['total_chunk_pages'],
    };
}

export function SearchSlimChunkQueryResponseBodyToJSON(value?: SearchSlimChunkQueryResponseBody | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'score_chunks': ((value['scoreChunks'] as Array<any>).map(ScoreSlimChunksToJSON)),
        'total_chunk_pages': value['totalChunkPages'],
    };
}

