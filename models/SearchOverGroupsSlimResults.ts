/* tslint:disable */
/* eslint-disable */
/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.6.9
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GroupScoreSlimChunks } from './GroupScoreSlimChunks';
import {
    GroupScoreSlimChunksFromJSON,
    GroupScoreSlimChunksFromJSONTyped,
    GroupScoreSlimChunksToJSON,
} from './GroupScoreSlimChunks';

/**
 * 
 * @export
 * @interface SearchOverGroupsSlimResults
 */
export interface SearchOverGroupsSlimResults {
    /**
     * 
     * @type {Array<GroupScoreSlimChunks>}
     * @memberof SearchOverGroupsSlimResults
     */
    groupChunks: Array<GroupScoreSlimChunks>;
    /**
     * 
     * @type {number}
     * @memberof SearchOverGroupsSlimResults
     */
    totalChunkPages: number;
}

/**
 * Check if a given object implements the SearchOverGroupsSlimResults interface.
 */
export function instanceOfSearchOverGroupsSlimResults(value: object): boolean {
    if (!('groupChunks' in value)) return false;
    if (!('totalChunkPages' in value)) return false;
    return true;
}

export function SearchOverGroupsSlimResultsFromJSON(json: any): SearchOverGroupsSlimResults {
    return SearchOverGroupsSlimResultsFromJSONTyped(json, false);
}

export function SearchOverGroupsSlimResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchOverGroupsSlimResults {
    if (json == null) {
        return json;
    }
    return {
        
        'groupChunks': ((json['group_chunks'] as Array<any>).map(GroupScoreSlimChunksFromJSON)),
        'totalChunkPages': json['total_chunk_pages'],
    };
}

export function SearchOverGroupsSlimResultsToJSON(value?: SearchOverGroupsSlimResults | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'group_chunks': ((value['groupChunks'] as Array<any>).map(GroupScoreSlimChunksToJSON)),
        'total_chunk_pages': value['totalChunkPages'],
    };
}

