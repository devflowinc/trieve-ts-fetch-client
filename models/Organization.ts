/* tslint:disable */
/* eslint-disable */
/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.6.9
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Organization
 */
export interface Organization {
    /**
     * 
     * @type {Date}
     * @memberof Organization
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof Organization
     */
    registerable?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Organization
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the Organization interface.
 */
export function instanceOfOrganization(value: object): boolean {
    if (!('createdAt' in value)) return false;
    if (!('id' in value)) return false;
    if (!('name' in value)) return false;
    if (!('updatedAt' in value)) return false;
    return true;
}

export function OrganizationFromJSON(json: any): Organization {
    return OrganizationFromJSONTyped(json, false);
}

export function OrganizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Organization {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['created_at'])),
        'id': json['id'],
        'name': json['name'],
        'registerable': json['registerable'] == null ? undefined : json['registerable'],
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function OrganizationToJSON(value?: Organization | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'created_at': ((value['createdAt']).toISOString()),
        'id': value['id'],
        'name': value['name'],
        'registerable': value['registerable'],
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

