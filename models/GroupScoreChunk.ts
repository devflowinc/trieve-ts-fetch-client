/* tslint:disable */
/* eslint-disable */
/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.6.9
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ScoreChunkDTO } from './ScoreChunkDTO';
import {
    ScoreChunkDTOFromJSON,
    ScoreChunkDTOFromJSONTyped,
    ScoreChunkDTOToJSON,
} from './ScoreChunkDTO';

/**
 * 
 * @export
 * @interface GroupScoreChunk
 */
export interface GroupScoreChunk {
    /**
     * 
     * @type {string}
     * @memberof GroupScoreChunk
     */
    groupId: string;
    /**
     * 
     * @type {string}
     * @memberof GroupScoreChunk
     */
    groupName?: string;
    /**
     * 
     * @type {string}
     * @memberof GroupScoreChunk
     */
    groupTrackingId?: string;
    /**
     * 
     * @type {Array<ScoreChunkDTO>}
     * @memberof GroupScoreChunk
     */
    metadata: Array<ScoreChunkDTO>;
}

/**
 * Check if a given object implements the GroupScoreChunk interface.
 */
export function instanceOfGroupScoreChunk(value: object): boolean {
    if (!('groupId' in value)) return false;
    if (!('metadata' in value)) return false;
    return true;
}

export function GroupScoreChunkFromJSON(json: any): GroupScoreChunk {
    return GroupScoreChunkFromJSONTyped(json, false);
}

export function GroupScoreChunkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupScoreChunk {
    if (json == null) {
        return json;
    }
    return {
        
        'groupId': json['group_id'],
        'groupName': json['group_name'] == null ? undefined : json['group_name'],
        'groupTrackingId': json['group_tracking_id'] == null ? undefined : json['group_tracking_id'],
        'metadata': ((json['metadata'] as Array<any>).map(ScoreChunkDTOFromJSON)),
    };
}

export function GroupScoreChunkToJSON(value?: GroupScoreChunk | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'group_id': value['groupId'],
        'group_name': value['groupName'],
        'group_tracking_id': value['groupTrackingId'],
        'metadata': ((value['metadata'] as Array<any>).map(ScoreChunkDTOToJSON)),
    };
}

