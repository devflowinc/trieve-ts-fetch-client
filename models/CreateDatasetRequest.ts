/* tslint:disable */
/* eslint-disable */
/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.6.9
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateDatasetRequest
 */
export interface CreateDatasetRequest {
    /**
     * Client configuration for the dataset, can be arbitrary JSON. We recommend setting to `{}` to start. See docs.trieve.ai for more information or adjust with the admin dashboard.
     * @type {any}
     * @memberof CreateDatasetRequest
     */
    clientConfiguration: any | null;
    /**
     * Name of the dataset. Must be unique within the organization.
     * @type {string}
     * @memberof CreateDatasetRequest
     */
    datasetName: string;
    /**
     * Organization ID that the dataset will belong to.
     * @type {string}
     * @memberof CreateDatasetRequest
     */
    organizationId: string;
    /**
     * Server configuration for the dataset, can be arbitrary JSON. We recommend setting to `{}` to start. See docs.trieve.ai for more information or adjust with the admin dashboard.
     * @type {any}
     * @memberof CreateDatasetRequest
     */
    serverConfiguration: any | null;
    /**
     * Optional tracking ID for the dataset. Can be used to track the dataset in external systems.
     * @type {string}
     * @memberof CreateDatasetRequest
     */
    trackingId?: string;
}

/**
 * Check if a given object implements the CreateDatasetRequest interface.
 */
export function instanceOfCreateDatasetRequest(value: object): boolean {
    if (!('clientConfiguration' in value)) return false;
    if (!('datasetName' in value)) return false;
    if (!('organizationId' in value)) return false;
    if (!('serverConfiguration' in value)) return false;
    return true;
}

export function CreateDatasetRequestFromJSON(json: any): CreateDatasetRequest {
    return CreateDatasetRequestFromJSONTyped(json, false);
}

export function CreateDatasetRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDatasetRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'clientConfiguration': json['client_configuration'],
        'datasetName': json['dataset_name'],
        'organizationId': json['organization_id'],
        'serverConfiguration': json['server_configuration'],
        'trackingId': json['tracking_id'] == null ? undefined : json['tracking_id'],
    };
}

export function CreateDatasetRequestToJSON(value?: CreateDatasetRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_configuration': value['clientConfiguration'],
        'dataset_name': value['datasetName'],
        'organization_id': value['organizationId'],
        'server_configuration': value['serverConfiguration'],
        'tracking_id': value['trackingId'],
    };
}

