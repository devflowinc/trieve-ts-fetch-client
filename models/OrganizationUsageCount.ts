/* tslint:disable */
/* eslint-disable */
/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.6.9
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrganizationUsageCount
 */
export interface OrganizationUsageCount {
    /**
     * 
     * @type {number}
     * @memberof OrganizationUsageCount
     */
    datasetCount: number;
    /**
     * 
     * @type {number}
     * @memberof OrganizationUsageCount
     */
    fileStorage: number;
    /**
     * 
     * @type {string}
     * @memberof OrganizationUsageCount
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof OrganizationUsageCount
     */
    messageCount: number;
    /**
     * 
     * @type {string}
     * @memberof OrganizationUsageCount
     */
    orgId: string;
    /**
     * 
     * @type {number}
     * @memberof OrganizationUsageCount
     */
    userCount: number;
}

/**
 * Check if a given object implements the OrganizationUsageCount interface.
 */
export function instanceOfOrganizationUsageCount(value: object): boolean {
    if (!('datasetCount' in value)) return false;
    if (!('fileStorage' in value)) return false;
    if (!('id' in value)) return false;
    if (!('messageCount' in value)) return false;
    if (!('orgId' in value)) return false;
    if (!('userCount' in value)) return false;
    return true;
}

export function OrganizationUsageCountFromJSON(json: any): OrganizationUsageCount {
    return OrganizationUsageCountFromJSONTyped(json, false);
}

export function OrganizationUsageCountFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationUsageCount {
    if (json == null) {
        return json;
    }
    return {
        
        'datasetCount': json['dataset_count'],
        'fileStorage': json['file_storage'],
        'id': json['id'],
        'messageCount': json['message_count'],
        'orgId': json['org_id'],
        'userCount': json['user_count'],
    };
}

export function OrganizationUsageCountToJSON(value?: OrganizationUsageCount | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'dataset_count': value['datasetCount'],
        'file_storage': value['fileStorage'],
        'id': value['id'],
        'message_count': value['messageCount'],
        'org_id': value['orgId'],
        'user_count': value['userCount'],
    };
}

