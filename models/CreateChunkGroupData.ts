/* tslint:disable */
/* eslint-disable */
/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.6.9
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateChunkGroupData
 */
export interface CreateChunkGroupData {
    /**
     * Description to assign to the chunk_group. Convenience field for you to avoid having to remember what the group is for.
     * @type {string}
     * @memberof CreateChunkGroupData
     */
    description?: string;
    /**
     * Optional metadata to assign to the chunk_group. This is a JSON object that can store any additional information you want to associate with the chunks inside of the chunk_group.
     * @type {any}
     * @memberof CreateChunkGroupData
     */
    metadata?: any;
    /**
     * Name to assign to the chunk_group. Does not need to be unique.
     * @type {string}
     * @memberof CreateChunkGroupData
     */
    name: string;
    /**
     * Optional tags to assign to the chunk_group. This is a list of strings that can be used to categorize the chunks inside the chunk_group.
     * @type {Array<string>}
     * @memberof CreateChunkGroupData
     */
    tagSet?: Array<string>;
    /**
     * Optional tracking id to assign to the chunk_group. This is a unique identifier for the chunk_group.
     * @type {string}
     * @memberof CreateChunkGroupData
     */
    trackingId?: string;
}

/**
 * Check if a given object implements the CreateChunkGroupData interface.
 */
export function instanceOfCreateChunkGroupData(value: object): boolean {
    if (!('name' in value)) return false;
    return true;
}

export function CreateChunkGroupDataFromJSON(json: any): CreateChunkGroupData {
    return CreateChunkGroupDataFromJSONTyped(json, false);
}

export function CreateChunkGroupDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateChunkGroupData {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'] == null ? undefined : json['description'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'name': json['name'],
        'tagSet': json['tag_set'] == null ? undefined : json['tag_set'],
        'trackingId': json['tracking_id'] == null ? undefined : json['tracking_id'],
    };
}

export function CreateChunkGroupDataToJSON(value?: CreateChunkGroupData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'description': value['description'],
        'metadata': value['metadata'],
        'name': value['name'],
        'tag_set': value['tagSet'],
        'tracking_id': value['trackingId'],
    };
}

