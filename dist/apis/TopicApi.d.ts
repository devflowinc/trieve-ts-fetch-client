/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.6.9
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CreateTopicData, Topic, UpdateTopicData } from '../models/index';
export interface CreateTopicRequest {
    tRDataset: string;
    createTopicData: CreateTopicData;
}
export interface DeleteTopicRequest {
    tRDataset: string;
    topicId: string;
}
export interface GetAllTopicsForUserRequest {
    userId: string;
    tRDataset: string;
}
export interface UpdateTopicRequest {
    tRDataset: string;
    updateTopicData: UpdateTopicData;
}
/**
 *
 */
export declare class TopicApi extends runtime.BaseAPI {
    /**
     * Create Topic  Create a new chat topic. Topics are attached to a user and act as a coordinator for memory of gen-AI chat sessions. We are considering refactoring this resource of the API soon.
     * Create Topic
     */
    createTopicRaw(requestParameters: CreateTopicRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Topic>>;
    /**
     * Create Topic  Create a new chat topic. Topics are attached to a user and act as a coordinator for memory of gen-AI chat sessions. We are considering refactoring this resource of the API soon.
     * Create Topic
     */
    createTopic(requestParameters: CreateTopicRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Topic>;
    /**
     * Delete Topic  Delete an existing chat topic. When a topic is deleted, all associated chat messages are also deleted.
     * Delete Topic
     */
    deleteTopicRaw(requestParameters: DeleteTopicRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete Topic  Delete an existing chat topic. When a topic is deleted, all associated chat messages are also deleted.
     * Delete Topic
     */
    deleteTopic(requestParameters: DeleteTopicRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Get All Topics for User  Get all topics belonging to a the auth\'ed user. Soon, we plan to allow specification of the user for this route and include pagination.
     * Get All Topics for User
     */
    getAllTopicsForUserRaw(requestParameters: GetAllTopicsForUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Topic>>>;
    /**
     * Get All Topics for User  Get all topics belonging to a the auth\'ed user. Soon, we plan to allow specification of the user for this route and include pagination.
     * Get All Topics for User
     */
    getAllTopicsForUser(requestParameters: GetAllTopicsForUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Topic>>;
    /**
     * Update Topic  Update an existing chat topic. Currently, only the name of the topic can be updated.
     * Update Topic
     */
    updateTopicRaw(requestParameters: UpdateTopicRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Update Topic  Update an existing chat topic. Currently, only the name of the topic can be updated.
     * Update Topic
     */
    updateTopic(requestParameters: UpdateTopicRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
}
