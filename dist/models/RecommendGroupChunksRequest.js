"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.6.9
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RecommendGroupChunksRequestToJSON = exports.RecommendGroupChunksRequestFromJSONTyped = exports.RecommendGroupChunksRequestFromJSON = exports.instanceOfRecommendGroupChunksRequest = void 0;
var ChunkFilter_1 = require("./ChunkFilter");
/**
 * Check if a given object implements the RecommendGroupChunksRequest interface.
 */
function instanceOfRecommendGroupChunksRequest(value) {
    return true;
}
exports.instanceOfRecommendGroupChunksRequest = instanceOfRecommendGroupChunksRequest;
function RecommendGroupChunksRequestFromJSON(json) {
    return RecommendGroupChunksRequestFromJSONTyped(json, false);
}
exports.RecommendGroupChunksRequestFromJSON = RecommendGroupChunksRequestFromJSON;
function RecommendGroupChunksRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'filters': json['filters'] == null ? undefined : (0, ChunkFilter_1.ChunkFilterFromJSON)(json['filters']),
        'groupSize': json['group_size'] == null ? undefined : json['group_size'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'negativeGroupIds': json['negative_group_ids'] == null ? undefined : json['negative_group_ids'],
        'negativeGroupTrackingIds': json['negative_group_tracking_ids'] == null ? undefined : json['negative_group_tracking_ids'],
        'positiveGroupIds': json['positive_group_ids'] == null ? undefined : json['positive_group_ids'],
        'positiveGroupTrackingIds': json['positive_group_tracking_ids'] == null ? undefined : json['positive_group_tracking_ids'],
        'recommendType': json['recommend_type'] == null ? undefined : json['recommend_type'],
        'slimChunks': json['slim_chunks'] == null ? undefined : json['slim_chunks'],
        'strategy': json['strategy'] == null ? undefined : json['strategy'],
    };
}
exports.RecommendGroupChunksRequestFromJSONTyped = RecommendGroupChunksRequestFromJSONTyped;
function RecommendGroupChunksRequestToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'filters': (0, ChunkFilter_1.ChunkFilterToJSON)(value['filters']),
        'group_size': value['groupSize'],
        'limit': value['limit'],
        'negative_group_ids': value['negativeGroupIds'],
        'negative_group_tracking_ids': value['negativeGroupTrackingIds'],
        'positive_group_ids': value['positiveGroupIds'],
        'positive_group_tracking_ids': value['positiveGroupTrackingIds'],
        'recommend_type': value['recommendType'],
        'slim_chunks': value['slimChunks'],
        'strategy': value['strategy'],
    };
}
exports.RecommendGroupChunksRequestToJSON = RecommendGroupChunksRequestToJSON;
