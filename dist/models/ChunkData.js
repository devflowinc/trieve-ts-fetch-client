"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.6.9
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChunkDataToJSON = exports.ChunkDataFromJSONTyped = exports.ChunkDataFromJSON = exports.instanceOfChunkData = void 0;
/**
 * Check if a given object implements the ChunkData interface.
 */
function instanceOfChunkData(value) {
    return true;
}
exports.instanceOfChunkData = instanceOfChunkData;
function ChunkDataFromJSON(json) {
    return ChunkDataFromJSONTyped(json, false);
}
exports.ChunkDataFromJSON = ChunkDataFromJSON;
function ChunkDataFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'chunkHtml': json['chunk_html'] == null ? undefined : json['chunk_html'],
        'chunkVector': json['chunk_vector'] == null ? undefined : json['chunk_vector'],
        'convertHtmlToText': json['convert_html_to_text'] == null ? undefined : json['convert_html_to_text'],
        'fileId': json['file_id'] == null ? undefined : json['file_id'],
        'groupIds': json['group_ids'] == null ? undefined : json['group_ids'],
        'groupTrackingIds': json['group_tracking_ids'] == null ? undefined : json['group_tracking_ids'],
        'link': json['link'] == null ? undefined : json['link'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'splitAvg': json['split_avg'] == null ? undefined : json['split_avg'],
        'tagSet': json['tag_set'] == null ? undefined : json['tag_set'],
        'timeStamp': json['time_stamp'] == null ? undefined : json['time_stamp'],
        'trackingId': json['tracking_id'] == null ? undefined : json['tracking_id'],
        'upsertByTrackingId': json['upsert_by_tracking_id'] == null ? undefined : json['upsert_by_tracking_id'],
        'weight': json['weight'] == null ? undefined : json['weight'],
    };
}
exports.ChunkDataFromJSONTyped = ChunkDataFromJSONTyped;
function ChunkDataToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'chunk_html': value['chunkHtml'],
        'chunk_vector': value['chunkVector'],
        'convert_html_to_text': value['convertHtmlToText'],
        'file_id': value['fileId'],
        'group_ids': value['groupIds'],
        'group_tracking_ids': value['groupTrackingIds'],
        'link': value['link'],
        'metadata': value['metadata'],
        'split_avg': value['splitAvg'],
        'tag_set': value['tagSet'],
        'time_stamp': value['timeStamp'],
        'tracking_id': value['trackingId'],
        'upsert_by_tracking_id': value['upsertByTrackingId'],
        'weight': value['weight'],
    };
}
exports.ChunkDataToJSON = ChunkDataToJSON;
